package com.github.coppco;

import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Panel;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Demo3_GUIChat extends Frame {
	
	private Button send;
	private Button log;
	private Button shake;
	private Button clear;
	private TextArea receiveT;
	private TextArea sendT;
	private TextField tf;

	private Demo3_GUIChat() {
		init();
		southPanel();
		centerPanel();
		
		event();
	}
	private void event() {
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {//关闭按钮
				System.exit(0);
			}
		});
		
		//发送按钮事件
		send.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					send();
				} catch (IOException e1) {
					
					e1.printStackTrace();
				}
			}
		});
	}
	//发送消息
	protected void send() throws IOException {
		String message = sendT.getText(); //获取发送区域内容
		String ip = tf.getText(); //获取ip地址
		DatagramSocket socket = new DatagramSocket();
		DatagramPacket packet = new DatagramPacket(message.getBytes(), message.getBytes().length, InetAddress.getByName(ip), 9999);
		socket.send(packet);
		
		String time = getCurrentTime();
		receiveT.append(time + "\t我对" + ip + "说\r\n" + message
		sendT.setText("");
	}
	//时间格式化
	private String getCurrentTime() {
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		return format.format(new Date());
	}
	//中间部分
	private void centerPanel() {
		Panel center = new Panel();
		receiveT = new TextArea();
		receiveT.setEditable(false); //接受区域不能编辑
		receiveT.setBackground(Color.WHITE);//设置背景颜色
		sendT = new TextArea(5, 1);
		
		//设置字体
		receiveT.setFont(new Font("xxx", Font.PLAIN, 15));
		sendT.setFont(new Font("xxx", Font.PLAIN, 15));
		
		center.setLayout(new BorderLayout()); //设置为 边界布局管理器
		center.add(sendT, BorderLayout.SOUTH); //放在南边
		center.add(receiveT, BorderLayout.CENTER);//放在中间
		
		this.add(center, BorderLayout.CENTER);
	}
	//下面部分
	private void southPanel() {
		Panel south = new Panel();
		tf = new TextField("127.0.0.1", 10);
		send = new Button("发送");
		log = new Button("记录");
		clear = new Button("清屏");
		shake = new Button("震动");
		
		south.add(tf);
		south.add(send);
		south.add(log);
		south.add(clear);
		south.add(shake);
		
		this.add(south, BorderLayout.SOUTH);//将south放在frame的南边
	}

	private void init() {
		this.setLocation(450, 50);
		this.setSize(400, 600);
		this.setVisible(true);
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		new Demo3_GUIChat();
	}

}
